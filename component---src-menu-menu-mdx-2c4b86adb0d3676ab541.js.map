{"version":3,"sources":["webpack:///../src/Menu/index.tsx","webpack:///../src/Menu/Menu.mdx"],"names":["Menu","props","options","divider","restProps","popupRef","useRef","Popup","ref","map","item","index","name","id","onClick","closeOnClick","dividerItem","rest","defaultDivider","length","MenuItem","key","e","current","close","memo","MenuOption","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","AdbIcon","Playground","Props","Avatar","doopageLogo","handleClick","console","log","label","button","style","width","backgroundColor","textAlign","color","hover","description","icon","disabled","src","size","shadow","getContextMenu","openMenu","onContextMenu","top","left","height","of","table","isMDXComponent"],"mappings":"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","file":"component---src-menu-menu-mdx-2c4b86adb0d3676ab541.js","sourcesContent":["import React, { FC, memo, useRef } from 'react';\nimport Popup, { PopupProps } from '../Popup';\nimport MenuItem, { MenuItemProps } from '../MenuItem';\n\ntype BaseProps = Omit<MenuItemProps, 'onClick'>;\n\nexport interface MenuOptionProps extends BaseProps {\n\tcloseOnClick?: boolean;\n\tonClick: (item: MenuOptionProps, e: any) => void;\n}\n\nexport interface MenuProps extends PopupProps {\n\toptions: Array<MenuOptionProps>;\n\t/**\n\t * Apply divider for all item\n\t */\n\tdivider?: boolean;\n}\n\nconst Menu: FC<MenuProps> = (props) => {\n\tconst { options, divider, ...restProps } = props;\n\tconst popupRef = useRef();\n\treturn (\n\t\t<Popup {...restProps} ref={popupRef}>\n\t\t\t{options.map((item, index) => {\n\t\t\t\tconst {\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tonClick,\n\t\t\t\t\tcloseOnClick = true,\n\t\t\t\t\tdivider: dividerItem,\n\t\t\t\t\t...rest\n\t\t\t\t} = item;\n\t\t\t\tconst defaultDivider = divider && index !== options.length - 1;\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\tonClick?.(item, e);\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tif (closeOnClick) popupRef.current?.close();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdivider={defaultDivider || dividerItem}\n\t\t\t\t\t\t{...rest}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Popup>\n\t);\n};\n\nexport default memo(Menu);\n\n// @ts-ignore\nexport const MenuOption = (props: MenuOptionProps) => null;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/doopage-react-ui-kit/doopage-react-ui-kit/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport AdbIcon from \"@material-ui/icons/Adb\";\nimport { Playground, Props } from \"docz\";\nimport { Avatar, MenuOption, Menu } from \"../index\";\nimport { doopageLogo } from \"../utils/constants\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"menu\"\n    }}>{`Menu`}</h1>\n    <p>{`Base on `}<a parentName=\"p\" {...{\n        \"href\": \"https://huynhhuyhiep.github.io/doopage-react-ui-kit/popup\"\n      }}>{`Popup`}</a></p>\n    <p>{`Related component`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://huynhhuyhiep.github.io/doopage-react-ui-kit/menu-item\"\n        }}>{`MenuItem`}</a></li>\n    </ul>\n    <p>{`Icon`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://material-ui.com/components/material-icons/\"\n        }}>{`https://material-ui.com/components/material-icons/`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Menu } from '@doopage/react-ui-kit'\n\nconst Example = () => {\n    return (\n      <Menu\n        label={'menu'}\n        options={[{id: '1', name: 'option1', onClick: () => {console.log('on click')}}]}\n      />\n    );\n}\n\nexport default Example;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h2>\n    <h3 {...{\n      \"id\": \"basic\"\n    }}>{`Basic`}</h3>\n    <Playground __position={0} __code={'() => {\\n  const handleClick = item => console.log(\\'on click\\', item)\\n  return (\\n    <Menu\\n      label={\\'menu\\'}\\n      options={[\\n        { name: \\'option 1\\', onClick: handleClick },\\n        { name: \\'option 2\\', onClick: handleClick },\\n      ]}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      AdbIcon,\n      Playground,\n      Props,\n      Avatar,\n      MenuOption,\n      Menu,\n      doopageLogo,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const handleClick = item => console.log('on click', item);\n\n        return <Menu label={'menu'} options={[{\n          name: 'option 1',\n          onClick: handleClick\n        }, {\n          name: 'option 2',\n          onClick: handleClick\n        }]} mdxType=\"Menu\" />;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"hover\"\n    }}>{`Hover`}</h3>\n    <Playground __position={1} __code={'() => {\\n  const handleClick = item => console.log(\\'on click\\', item)\\n  return (\\n    <Menu\\n      button={\\n        <div\\n          style={{\\n            width: 100,\\n            backgroundColor: \\'gray\\',\\n            textAlign: \\'center\\',\\n            color: \\'#fff\\',\\n          }}\\n        >\\n          menu\\n        </div>\\n      }\\n      hover\\n      options={[\\n        {\\n          id: \\'1\\',\\n          name: \\'option 1\\',\\n          onClick: handleClick,\\n          description: \\'description option 1\\',\\n          icon: <AdbIcon />,\\n          disabled: true,\\n          divider: true,\\n        },\\n        {\\n          id: \\'2\\',\\n          name: \\'option 2\\',\\n          onClick: handleClick,\\n          description: \\'description option 2\\',\\n          icon: <Avatar src={doopageLogo} size=\\\"small\\\" shadow={false} />,\\n          closeOnClick: false,\\n        },\\n      ]}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      AdbIcon,\n      Playground,\n      Props,\n      Avatar,\n      MenuOption,\n      Menu,\n      doopageLogo,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const handleClick = item => console.log('on click', item);\n\n        return <Menu button={<div style={{\n          width: 100,\n          backgroundColor: 'gray',\n          textAlign: 'center',\n          color: '#fff'\n        }}>menu</div>} hover options={[{\n          id: '1',\n          name: 'option 1',\n          onClick: handleClick,\n          description: 'description option 1',\n          icon: <AdbIcon mdxType=\"AdbIcon\" />,\n          disabled: true,\n          divider: true\n        }, {\n          id: '2',\n          name: 'option 2',\n          onClick: handleClick,\n          description: 'description option 2',\n          icon: <Avatar src={doopageLogo} size='small' shadow={false} mdxType=\"Avatar\" />,\n          closeOnClick: false\n        }]} mdxType=\"Menu\" />;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"context-menu\"\n    }}>{`Context Menu`}</h3>\n    <Playground __position={2} __code={'() => {\\n  const handleClick = item => console.log(\\'on click\\', item)\\n  return (\\n    <Menu\\n      getContextMenu={openMenu => {\\n        return (\\n          <div\\n            onContextMenu={e => {\\n              const { top, left } = openMenu(e)\\n            }}\\n            style={{\\n              width: 500,\\n              height: 300,\\n              backgroundColor: \\'#eeeeee\\',\\n              textAlign: \\'center\\',\\n            }}\\n          >\\n            Right click to open menu\\n          </div>\\n        )\\n      }}\\n      options={[\\n        {\\n          id: \\'1\\',\\n          name: \\'option 1\\',\\n          onClick: handleClick,\\n          description: \\'description option 1\\',\\n          icon: <AdbIcon />,\\n          disabled: true,\\n          divider: true,\\n        },\\n        {\\n          id: \\'2\\',\\n          name: \\'option 2\\',\\n          onClick: handleClick,\\n          description: \\'description option 2\\',\\n          icon: <Avatar src={doopageLogo} size=\\\"small\\\" shadow={false} />,\\n          closeOnClick: false,\\n        },\\n      ]}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      AdbIcon,\n      Playground,\n      Props,\n      Avatar,\n      MenuOption,\n      Menu,\n      doopageLogo,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const handleClick = item => console.log('on click', item);\n\n        return <Menu getContextMenu={openMenu => {\n          return <div onContextMenu={e => {\n            const {\n              top,\n              left\n            } = openMenu(e);\n          }} style={{\n            width: 500,\n            height: 300,\n            backgroundColor: '#eeeeee',\n            textAlign: 'center'\n          }}>\n              Right click to open menu\n            </div>;\n        }} options={[{\n          id: '1',\n          name: 'option 1',\n          onClick: handleClick,\n          description: 'description option 1',\n          icon: <AdbIcon mdxType=\"AdbIcon\" />,\n          disabled: true,\n          divider: true\n        }, {\n          id: '2',\n          name: 'option 2',\n          onClick: handleClick,\n          description: 'description option 2',\n          icon: <Avatar src={doopageLogo} size='small' shadow={false} mdxType=\"Avatar\" />,\n          closeOnClick: false\n        }]} mdxType=\"Menu\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <h3 {...{\n      \"id\": \"option\"\n    }}>{`Option`}</h3>\n    <Props of={MenuOption} table mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"menu-1\"\n    }}>{`Menu`}</h3>\n    <Props of={Menu} table mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}