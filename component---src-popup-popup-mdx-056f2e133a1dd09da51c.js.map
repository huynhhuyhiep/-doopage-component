{"version":3,"sources":["webpack:///../src/Popup/Popup.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","MenuIcon","Playground","Props","useRef","Button","Popup","label","buttonProps","justIcon","color","size","round","anchorOrigin","vertical","horizontal","transformOrigin","popupRef","ref","simple","onClick","current","close","hover","of","table","isMDXComponent"],"mappings":"iTAaaA,G,UAAe,S,qMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,YAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,SADR,SAGA,gCACA,sBACE,kBAAIC,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,wDADQ,wDAGpB,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,uDADQ,wDAItB,6BACA,sBACE,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,uDADQ,wDAItB,iBAAQ,CACN,GAAM,eADR,eAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,sKAUL,iBAAQ,CACN,GAAM,cADR,cAGA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,8CAAiDC,SAAO,GACzFL,QACAH,kBACAS,aACAC,eACAC,UACAC,gBACAC,WACAC,WARyF,gBASzFd,IATyF,EAUzFH,eAVyF,GAWxFO,QAAQ,cACb,YAAC,IAAD,CAAOW,MAAO,OAAQX,QAAQ,SAA9B,kBAEE,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,gTAA6TC,SAAO,GACrWL,QACAH,kBACAS,aACAC,eACAC,UACAC,gBACAC,WACAC,WARqW,gBASrWd,IATqW,EAUrWH,eAVqW,GAWpWO,QAAQ,cACb,YAAC,IAAD,CAAOW,MAAO,YAAC,IAAD,CAAUX,QAAQ,aAAeY,YAAa,CACtDC,UAAU,EACVC,MAAO,OACPC,KAAM,QACNC,OAAO,GACNC,aAAc,CACfC,SAAU,SACVC,WAAY,QACXC,gBAAiB,CAClBF,SAAU,MACVC,WAAY,QACXnB,QAAQ,SACb,2CAKA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,uTAA0TC,SAAO,GAClWL,QACAH,kBACAS,aACAC,eACAC,UACAC,gBACAC,WACAC,WARkW,gBASlWd,IATkW,EAUlWH,eAVkW,GAWjWO,QAAQ,eACZ,WACK,IAAMqB,EAAWb,mBAMjB,OAAO,4BACP,YAAC,IAAD,CAAOG,MAAO,YAAC,IAAD,CAAUX,QAAQ,aAAesB,IAAKD,EAAUrB,QAAQ,SACpE,YAAC,IAAD,CAAQc,MAAM,OAAOS,QAAM,EAACC,QANV,WAClBH,EAASI,QAAQC,SAKiC1B,QAAQ,UAA1D,oBAON,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,4EAA6EC,SAAO,GACrHL,QACAH,kBACAS,aACAC,eACAC,UACAC,gBACAC,WACAC,WARqH,gBASrHd,IATqH,EAUrHH,eAVqH,GAWpHO,QAAQ,cACb,YAAC,IAAD,CAAOW,MAAO,YAAC,IAAD,CAAUX,QAAQ,aAAe2B,OAAK,EAAC3B,QAAQ,SAC3D,2CAKA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAO4B,GAAIlB,IAAOmB,OAAK,EAAC7B,QAAQ,gB,mMAKpCH,EAAWiC,gBAAiB","file":"component---src-popup-popup-mdx-056f2e133a1dd09da51c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/doopage-react-ui-kit/doopage-react-ui-kit/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Playground, Props } from \"docz\";\nimport { useRef } from \"react\";\nimport { Button } from \"../index\";\nimport Popup from \"./index\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"popup\"\n    }}>{`Popup`}</h1>\n    <p>{`Base on`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://material-ui.com/components/popover/#popover\"\n        }}>{`https://material-ui.com/components/popover/#popover`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/jcoreio/material-ui-popup-state\"\n        }}>{`https://github.com/jcoreio/material-ui-popup-state`}</a></li>\n    </ul>\n    <p>{`Icon`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://material-ui.com/components/material-icons/\"\n        }}>{`https://material-ui.com/components/material-icons/`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Popup } from '@doopage/react-ui-kit'\n\nconst Example = () => {\n    return <Popup label={'menu'}>this is popup</Popup>;\n}\n\nexport default Example;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h2>\n    <h3 {...{\n      \"id\": \"basic\"\n    }}>{`Basic`}</h3>\n    <Playground __position={0} __code={'<Popup label={\\'menu\\'}>this is popup</Popup>'} __scope={{\n      props,\n      DefaultLayout,\n      MenuIcon,\n      Playground,\n      Props,\n      useRef,\n      Button,\n      Popup,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Popup label={'menu'} mdxType=\"Popup\">this is popup</Popup>\n    </Playground>\n    <h3 {...{\n      \"id\": \"advanced\"\n    }}>{`Advanced`}</h3>\n    <Playground __position={1} __code={'<Popup\\n  label={<MenuIcon />}\\n  buttonProps={{ justIcon: true, color: \\'gray\\', size: \\'small\\', round: true }}\\n  anchorOrigin={{\\n    vertical: \\'bottom\\',\\n    horizontal: \\'left\\',\\n  }}\\n  transformOrigin={{\\n    vertical: \\'top\\',\\n    horizontal: \\'left\\',\\n  }}\\n>\\n  <div>this is pop up</div>\\n</Popup>'} __scope={{\n      props,\n      DefaultLayout,\n      MenuIcon,\n      Playground,\n      Props,\n      useRef,\n      Button,\n      Popup,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Popup label={<MenuIcon mdxType=\"MenuIcon\" />} buttonProps={{\n        justIcon: true,\n        color: 'gray',\n        size: 'small',\n        round: true\n      }} anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left'\n      }} transformOrigin={{\n        vertical: 'top',\n        horizontal: 'left'\n      }} mdxType=\"Popup\">\n    <div>\n      this is pop up\n    </div>\n  </Popup>\n    </Playground>\n    <h3 {...{\n      \"id\": \"control\"\n    }}>{`Control`}</h3>\n    <Playground __position={2} __code={'() => {\\n  const popupRef = useRef()\\n  const handleClose = () => {\\n    popupRef.current.close()\\n  }\\n  return (\\n    <>\\n      <Popup label={<MenuIcon />} ref={popupRef}>\\n        <Button color=\\\"gray\\\" simple onClick={handleClose}>\\n          Close popup\\n        </Button>\\n      </Popup>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      MenuIcon,\n      Playground,\n      Props,\n      useRef,\n      Button,\n      Popup,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const popupRef = useRef();\n\n        const handleClose = () => {\n          popupRef.current.close();\n        };\n\n        return <>\n        <Popup label={<MenuIcon mdxType=\"MenuIcon\" />} ref={popupRef} mdxType=\"Popup\">\n          <Button color='gray' simple onClick={handleClose} mdxType=\"Button\">\n            Close popup\n          </Button>\n        </Popup>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"hover\"\n    }}>{`Hover`}</h3>\n    <Playground __position={3} __code={'<Popup label={<MenuIcon />} hover>\\n  <div>this is pop up</div>\\n</Popup>'} __scope={{\n      props,\n      DefaultLayout,\n      MenuIcon,\n      Playground,\n      Props,\n      useRef,\n      Button,\n      Popup,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Popup label={<MenuIcon mdxType=\"MenuIcon\" />} hover mdxType=\"Popup\">\n    <div>\n      this is pop up\n    </div>\n  </Popup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Popup} table mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}