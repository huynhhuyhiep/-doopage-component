{"version":3,"sources":["webpack:///../src/DnDList/styles.ts","webpack:///../src/DnDList/index.tsx","webpack:///../src/DnDList/Checkbox.mdx"],"names":["createSwitchColor","color","createHoverBackgroundColor","backgroundColor","getOpacityColor","useStyles","makeStyles","theme","colors","primaryColor","successColor","dangerColor","infoColor","warningColor","grayColor","createStyles","checkbox","fontSize","primary","info","success","warning","danger","disabled","checkedIcon","width","height","border","borderRadius","uncheckedIcon","padding","disabledCheckboxAndRadio","borderColor","opacity","DnDList","props","classes","helperText","hide","label","formProps","children","className","labelPlacement","rest","customClass","classNames","Check","icon","FormControlLabel","control","Tooltip","TransitionComponent","Zoom","title","placement","memo","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","Playground","Props","Space","Checkbox","checked","simple","spaceWidth","of","table","isMDXComponent"],"mappings":"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","file":"component---src-dn-d-list-checkbox-mdx-f2c19e2654f112ab3cc6.js","sourcesContent":["import { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { theme } from '../Theme';\nimport { getOpacityColor } from '../utils/constants';\n\nconst createSwitchColor = (color: string) => ({\n\tcolor: `${color} !important`,\n});\n\nconst createHoverBackgroundColor = (color: string) => ({\n\t'&:focus,&:hover,&:visited': {\n\t\tbackgroundColor: getOpacityColor(color)(0.1),\n\t},\n});\n\nconst useStyles = makeStyles(() => {\n\tconst {\n\t\tprimaryColor,\n\t\tsuccessColor,\n\t\tdangerColor,\n\t\tinfoColor,\n\t\twarningColor,\n\t\tgrayColor,\n\t} = theme.colors;\n\n\treturn createStyles({\n\t\tcheckbox: {\n\t\t\t'& + .MuiFormControlLabel-label': {\n\t\t\t\tfontSize: '0.8rem',\n\t\t\t},\n\t\t\t'&$primary': createHoverBackgroundColor(primaryColor),\n\t\t\t'&$info': createHoverBackgroundColor(infoColor),\n\t\t\t'&$success': createHoverBackgroundColor(successColor),\n\t\t\t'&$danger': createHoverBackgroundColor(dangerColor),\n\t\t\t'&warning': createHoverBackgroundColor(warningColor),\n\t\t},\n\t\tprimary: createSwitchColor(primaryColor),\n\t\tinfo: createSwitchColor(infoColor),\n\t\tsuccess: createSwitchColor(successColor),\n\t\twarning: createSwitchColor(warningColor),\n\t\tdanger: createSwitchColor(dangerColor),\n\t\tdisabled: createSwitchColor(grayColor),\n\t\tcheckedIcon: {\n\t\t\twidth: '18px',\n\t\t\theight: '18px',\n\t\t\tborder: '1px solid rgba(0, 0, 0, .54)',\n\t\t\tborderRadius: '3px',\n\t\t},\n\t\tuncheckedIcon: {\n\t\t\twidth: '0px',\n\t\t\theight: '0px',\n\t\t\tpadding: '9px',\n\t\t\tborderRadius: '3px',\n\t\t\tborder: '1px solid rgba(0, 0, 0, .54)',\n\t\t},\n\t\tdisabledCheckboxAndRadio: {\n\t\t\t'& $checkedIcon,& $uncheckedIcon,& $radioChecked,& $radioUnchecked': {\n\t\t\t\tborderColor: '#000000',\n\t\t\t\topacity: '0.26',\n\t\t\t\tcolor: '#000000',\n\t\t\t},\n\t\t},\n\t});\n});\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport {\n\tCheckboxProps as MuiCheckboxProps,\n\tFormControlLabel,\n\tFormControlLabelProps,\n\tTooltip,\n\tZoom,\n} from '@material-ui/core';\nimport classNames from 'classnames';\nimport MuiCheckbox from '@material-ui/core/Checkbox';\nimport { Check } from '@material-ui/icons';\nimport useStyles from './styles';\nimport { ColorType } from '../utils/constants';\n\ntype BaseProps = Omit<MuiCheckboxProps, 'color' | 'size'>;\n\nexport interface CheckboxProps extends BaseProps {\n\thide?: boolean;\n\tcolor?: ColorType;\n\thelperText?: string;\n\tlabel?: string;\n\tstyles?: any;\n\tformProps?: FormControlLabelProps;\n\tlabelPlacement?: 'end' | 'start' | 'top' | 'bottom';\n}\n\nconst DnDList: FC<CheckboxProps> = (props) => {\n\tconst classes = useStyles(props);\n\tconst {\n\t\thelperText,\n\t\thide,\n\t\tlabel,\n\t\tformProps,\n\t\tcolor = 'primary',\n\t\tchildren,\n\t\tclassName,\n\t\tlabelPlacement,\n\t\tdisabled,\n\t\t...rest\n\t} = props;\n\n\tif (hide) return null;\n\n\tconst customClass = classNames(className, classes.checkbox, {\n\t\t[classes[color]]: color,\n\t\t[classes.disabled]: disabled,\n\t});\n\n\tlet checkbox = (\n\t\t<MuiCheckbox\n\t\t\tdisabled={disabled}\n\t\t\tcheckedIcon={<Check className={classes.checkedIcon} />}\n\t\t\ticon={<Check className={classes.uncheckedIcon} />}\n\t\t\t{...rest}\n\t\t\tclassName={customClass}\n\t\t/>\n\t);\n\n\tif (label || children || formProps)\n\t\tcheckbox = (\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={checkbox}\n\t\t\t\tlabel={label || children}\n\t\t\t\tlabelPlacement={labelPlacement}\n\t\t\t\t{...formProps}\n\t\t\t/>\n\t\t);\n\n\tif (helperText)\n\t\tcheckbox = (\n\t\t\t<Tooltip\n\t\t\t\tTransitionComponent={Zoom}\n\t\t\t\ttitle={helperText}\n\t\t\t\tplacement={'bottom'}\n\t\t\t>\n\t\t\t\t{checkbox}\n\t\t\t</Tooltip>\n\t\t);\n\n\treturn checkbox;\n};\n\nexport default memo(DnDList);\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/doopage-react-ui-kit/doopage-react-ui-kit/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from \"docz\";\nimport { Space } from \"../index\";\nimport Checkbox from \"./index\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n    <p>{`Base on `}<a parentName=\"p\" {...{\n        \"href\": \"https://material-ui.com/components/checkboxes/\"\n      }}>{`https://material-ui.com/components/checkboxes/`}</a></p>\n    <p>{`Related component`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://material-ui.com/api/form-control-label/#formcontrollabel-api\"\n        }}>{`https://material-ui.com/api/form-control-label/#formcontrollabel-api`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://material-ui.com/components/tooltips/\"\n        }}>{`https://material-ui.com/components/tooltips/`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://material-ui.com/components/icons/\"\n        }}>{`https://material-ui.com/components/icons/`}</a></li>\n    </ul>\n    <p>{`Icon`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://material-ui.com/components/material-icons/\"\n        }}>{`https://material-ui.com/components/material-icons/`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Checkbox } from '@doopage/react-ui-kit'\n\nconst Example = () => <Checkbox />;\n\nexport default Example;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h2>\n    <h3 {...{\n      \"id\": \"basic\"\n    }}>{`Basic`}</h3>\n    <Playground __position={0} __code={'<Checkbox color=\\\"primary\\\" />\\n<Checkbox color=\\\"primary\\\" disabled checked />\\n<Checkbox color=\\\"primary\\\" disabled />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Space,\n      Checkbox,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Checkbox color='primary' mdxType=\"Checkbox\" />\n    <Checkbox color='primary' disabled checked mdxType=\"Checkbox\" />\n    <Checkbox color='primary' disabled mdxType=\"Checkbox\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"with-label\"\n    }}>{`With label`}</h3>\n    <Playground __position={1} __code={'<Checkbox color=\\\"primary\\\" checked>\\n  Primary\\n</Checkbox>\\n<Checkbox color=\\\"info\\\" checked>\\n  Info\\n</Checkbox>\\n<Checkbox color=\\\"warning\\\" label=\\\"Warning\\\" checked />\\n<Checkbox color=\\\"success\\\" checked>\\n  Success\\n</Checkbox>\\n<Checkbox color=\\\"danger\\\" checked>\\n  Danger\\n</Checkbox>\\n<Checkbox simple color=\\\"info\\\" disabled>\\n  Disable\\n</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Space,\n      Checkbox,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Checkbox color='primary' checked mdxType=\"Checkbox\">Primary</Checkbox>\n    <Checkbox color='info' checked mdxType=\"Checkbox\">Info</Checkbox>\n    <Checkbox color='warning' label='Warning' checked mdxType=\"Checkbox\" />\n    <Checkbox color='success' checked mdxType=\"Checkbox\">Success</Checkbox>\n    <Checkbox color='danger' checked mdxType=\"Checkbox\">Danger</Checkbox>\n      <Checkbox simple color='info' disabled mdxType=\"Checkbox\">Disable</Checkbox>\n    </Playground>\n    <h3 {...{\n      \"id\": \"with-helpertext\"\n    }}>{`With helperText`}</h3>\n    <Playground __position={2} __code={'<Checkbox helperText=\\\"this is heplerText\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Space,\n      Checkbox,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Checkbox helperText='this is heplerText' mdxType=\"Checkbox\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"label-placement\"\n    }}>{`Label placement`}</h3>\n    <Playground __position={3} __code={'<Space spaceWidth={15}>\\n  <Checkbox color=\\\"primary\\\" checked labelPlacement=\\\"start\\\">\\n    Primary\\n  </Checkbox>\\n  <Checkbox color=\\\"info\\\" checked labelPlacement=\\\"end\\\">\\n    Info\\n  </Checkbox>\\n  <Checkbox color=\\\"warning\\\" label=\\\"Warning\\\" checked labelPlacement=\\\"bottom\\\" />\\n  <Checkbox color=\\\"success\\\" checked labelPlacement=\\\"top\\\">\\n    Success\\n  </Checkbox>\\n</Space>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Space,\n      Checkbox,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Space spaceWidth={15} mdxType=\"Space\">\n        <Checkbox color='primary' checked labelPlacement='start' mdxType=\"Checkbox\">Primary</Checkbox>\n        <Checkbox color='info' checked labelPlacement='end' mdxType=\"Checkbox\">Info</Checkbox>\n        <Checkbox color='warning' label='Warning' checked labelPlacement='bottom' mdxType=\"Checkbox\" />\n        <Checkbox color='success' checked labelPlacement='top' mdxType=\"Checkbox\">Success</Checkbox>\n    </Space>\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Checkbox} table mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}