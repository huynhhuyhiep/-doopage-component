{"version":3,"sources":["webpack:///../src/Theme/Theme.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","InlineCode","Playground","Button","setTheme","useTheme","Input","primaryColor","color","variant","label","theme","isMDXComponent"],"mappings":"sTAWaA,G,UAAe,S,qMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,eADR,eAGA,yFAEA,YAAC,IAAD,CAAYA,QAAQ,cAApB,+CACA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,oKAUL,qCACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,iFAKL,iCACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,+KAUL,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,oJAA2JC,SAAO,GACnML,QACAH,kBACAS,eACAC,eACAC,WACAC,aACAC,aACAC,WARmM,gBASnMd,IATmM,EAUnMH,eAVmM,GAWlMO,QAAQ,cACZQ,YAAS,CACJG,aAAc,YAEpB,YAAC,IAAD,CAAQC,MAAM,UAAUZ,QAAQ,UAAhC,iBAGA,YAAC,IAAD,CAAOa,QAAQ,WAAWC,MAAM,eAAed,QAAQ,WAErD,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,wIAA2IC,SAAO,GACnLL,QACAH,kBACAS,eACAC,eACAC,WACAC,aACAC,aACAC,WARmL,gBASnLd,IATmL,EAUnLH,eAVmL,GAWlLO,QAAQ,eACZ,WACK,IAAMe,EAAQN,cACd,OAAO,4BACP,YAAC,IAAD,CAAQG,MAAM,UAAUZ,QAAQ,UAC7Be,EAAMJ,wB,mMASjBd,EAAWmB,gBAAiB","file":"component---src-theme-theme-mdx-374ad0482c3425416f71.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/doopage-react-ui-kit/doopage-react-ui-kit/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { InlineCode } from \"@nejcm/docz-theme-extended\";\nimport { Playground } from \"docz\";\nimport { Button, setTheme, useTheme, Input } from \"../index\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"theme\"\n    }}>{`Theme`}</h1>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <p>{`Set theme color before render App\nColor must following formats:`}</p>\n    <InlineCode mdxType=\"InlineCode\">#nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()</InlineCode>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { setTheme } from '@doopage/react-ui-kit'\n\nsetTheme({\n  primaryColor: '#551A8B',\n})\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));\n`}</code></pre>\n    <p>{`To get theme`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { getTheme } from '@doopage/react-ui-kit'\nconst theme = getTheme()\n`}</code></pre>\n    <p>{`useTheme`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useTheme } from '@doopage/react-ui-kit'\nconst MyComponent = () => {\n  const theme = useTheme()\n    return (\n      <div>{theme.primaryColor}</div>\n    )\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h2>\n    <Playground __position={1} __code={'{setTheme({\\n  primaryColor: \\'#551A8B\\',\\n})}\\n<Button color=\\\"primary\\\">Purple button</Button>\\n<Input variant=\\\"outlined\\\" label=\\\"purple input\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      InlineCode,\n      Playground,\n      Button,\n      setTheme,\n      useTheme,\n      Input,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {setTheme({\n        primaryColor: '#551A8B'\n      })}\n  <Button color='primary' mdxType=\"Button\">\n    Purple button\n  </Button>\n  <Input variant=\"outlined\" label='purple input' mdxType=\"Input\" />\n    </Playground>\n    <Playground __position={2} __code={'() => {\\n  const theme = useTheme()\\n  return (\\n    <>\\n      <Button color=\\\"primary\\\">{theme.primaryColor}</Button>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      InlineCode,\n      Playground,\n      Button,\n      setTheme,\n      useTheme,\n      Input,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const theme = useTheme();\n        return <>\n        <Button color='primary' mdxType=\"Button\">\n          {theme.primaryColor}\n        </Button>\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}